spring.application.name=INVENTORY-SERVICE

#server.port=8088
# to run INVENTORY-SERVICE on different random port i am setting port to 0. springboot will pick the free random port
# due to below setting spring-boot will pickup the free available random port and with this setting also enable "Allow multiple instances" in each microservice
# if we want different microservices and their instances run on random different available port then set "Allow multiple instances" and server.port=0 setting to each microservices
server.port=0

spring.cloud.config.enabled=false
#spring.config.import=optional:configserver:http:'//localhost:8888
#spring.config.import=configserver:http:'//spring-cloud-config-server:8888

# if the Spring-Cloud-Config-Server is Down?
# after mentioning this code client will not run without getting configuration from Spring-Cloud-Config-Server. Default value is false
#spring.cloud.config.failFast=true
#spring.cloud.config.retry.max-attempts=15


spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.show_table=true
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.properties.hibernate.dialect=MySQL8Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect


#spring.datasource.url=jdbc:h2:mem:testdb
#persist the data
#spring.datasource.url=jdbc:h2:file:/home/pratheush/jlab/my_idea_projects/myprogramming_tech_micro/inventorydb/inventorydata

# H2 database error: Database may be already in use: "Locked by another process"
spring.datasource.url=jdbc:h2:file:/home/pratheush/jlab/my_idea_projects/myprogramming_tech_micro/inventorydb/inventorydata;AUTO_SERVER=TRUE;
#spring.datasource.url=jdbc:h2:tcp://localhost/home/pratheush/jlab/my_idea_projects/myprogramming_tech_micro/inventorydb/inventorydata
#spring.datasource.url=jdbc:h2:C:/data/sampledata
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.password=sa
spring.datasource.username=sa
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#configure Eureka URL for its own-discovery to other running Eureka-Naming-Server
# configuring the naming-server url in the application.properties of microservice application. to register microservice app properly with the naming-server
#eureka.client.serviceUrl.defaultZone=http:'//localhost:8761/eureka
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

### Distributed Tracing ###
# this sampler probability is 1.0 that means we want to send 100% of the request which we are receiving to our system to zipkin
# we want to start tracing 100% of the request which we are receiving to our system
spring.sleuth.sampler.probability=1.0
spring.zipkin.base-url=http://localhost:9411/